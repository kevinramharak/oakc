;;/
;; This file defines functions to act like a intermediate between the Oak vm and the MAR stack
;; void __ffi_pass_arg_by_value(int value)
;; void __ffi_pass_arg_by_reference(void * pointer)
;; void __ffi_pass_return_value_by_value(int value)
;; void __ffi_pass_return_value_by_reference(void * pointer)
;;/

__ffi_pass_arg_by_value:
    pop b                      ;; save return address
    call __core_machine_pop    ;; get value from vm stack
    push a                     ;; push value
    push b                     ;; push back return address
    ret                        ;; return from caller

;; unwraps a pointer into vm->memory from the vm stack to the mar stack
__ffi_pass_arg_by_reference:
    pop b                      ;; save return address
    call __core_machine_pop    ;; get value from vm stack
    add a, [__core_vm_memory]
    push a                     ;; push value
    push b                     ;; push back return address
    ret                        ;; return from caller

;; wraps the mar return value (in A) to the vm stack
__ffi_pass_return_value_as_value:
    push a
    call __core_machine_push
    ret

;; wraps the mar return value (in A) as reference to the vm stack
__ffi_pass_return_value_as_reference:
    sub a, [__core_vm_memory]
    push a
    call __core_machine_push
    ret
